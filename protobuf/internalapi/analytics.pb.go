// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: analytics.proto

package internalapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectType int32

const (
	ObjectType_OBJECT_TYPE_UNSPECIFIED ObjectType = 0
	ObjectType_OBJECT_TYPE_DAO         ObjectType = 1
	ObjectType_OBJECT_TYPE_PROPOSAL    ObjectType = 2
	ObjectType_OBJECT_TYPE_VOTER       ObjectType = 3
)

// Enum value maps for ObjectType.
var (
	ObjectType_name = map[int32]string{
		0: "OBJECT_TYPE_UNSPECIFIED",
		1: "OBJECT_TYPE_DAO",
		2: "OBJECT_TYPE_PROPOSAL",
		3: "OBJECT_TYPE_VOTER",
	}
	ObjectType_value = map[string]int32{
		"OBJECT_TYPE_UNSPECIFIED": 0,
		"OBJECT_TYPE_DAO":         1,
		"OBJECT_TYPE_PROPOSAL":    2,
		"OBJECT_TYPE_VOTER":       3,
	}
)

func (x ObjectType) Enum() *ObjectType {
	p := new(ObjectType)
	*p = x
	return p
}

func (x ObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_analytics_proto_enumTypes[0].Descriptor()
}

func (ObjectType) Type() protoreflect.EnumType {
	return &file_analytics_proto_enumTypes[0]
}

func (x ObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectType.Descriptor instead.
func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{0}
}

type MonthlyActiveUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId          string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	PeriodInMonths uint32 `protobuf:"varint,2,opt,name=period_in_months,json=periodInMonths,proto3" json:"period_in_months,omitempty"`
}

func (x *MonthlyActiveUsersRequest) Reset() {
	*x = MonthlyActiveUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyActiveUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyActiveUsersRequest) ProtoMessage() {}

func (x *MonthlyActiveUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyActiveUsersRequest.ProtoReflect.Descriptor instead.
func (*MonthlyActiveUsersRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{0}
}

func (x *MonthlyActiveUsersRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *MonthlyActiveUsersRequest) GetPeriodInMonths() uint32 {
	if x != nil {
		return x.PeriodInMonths
	}
	return 0
}

type MonthlyActiveUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodStarted  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=period_started,json=periodStarted,proto3" json:"period_started,omitempty"`
	ActiveUsers    uint64                 `protobuf:"varint,2,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	NewActiveUsers uint64                 `protobuf:"varint,3,opt,name=new_active_users,json=newActiveUsers,proto3" json:"new_active_users,omitempty"`
}

func (x *MonthlyActiveUsers) Reset() {
	*x = MonthlyActiveUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyActiveUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyActiveUsers) ProtoMessage() {}

func (x *MonthlyActiveUsers) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyActiveUsers.ProtoReflect.Descriptor instead.
func (*MonthlyActiveUsers) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{1}
}

func (x *MonthlyActiveUsers) GetPeriodStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStarted
	}
	return nil
}

func (x *MonthlyActiveUsers) GetActiveUsers() uint64 {
	if x != nil {
		return x.ActiveUsers
	}
	return 0
}

func (x *MonthlyActiveUsers) GetNewActiveUsers() uint64 {
	if x != nil {
		return x.NewActiveUsers
	}
	return 0
}

type MonthlyActiveUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonthlyActiveUsers []*MonthlyActiveUsers `protobuf:"bytes,1,rep,name=monthly_active_users,json=monthlyActiveUsers,proto3" json:"monthly_active_users,omitempty"`
}

func (x *MonthlyActiveUsersResponse) Reset() {
	*x = MonthlyActiveUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyActiveUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyActiveUsersResponse) ProtoMessage() {}

func (x *MonthlyActiveUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyActiveUsersResponse.ProtoReflect.Descriptor instead.
func (*MonthlyActiveUsersResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{2}
}

func (x *MonthlyActiveUsersResponse) GetMonthlyActiveUsers() []*MonthlyActiveUsers {
	if x != nil {
		return x.MonthlyActiveUsers
	}
	return nil
}

type VoterBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
}

func (x *VoterBucketsRequest) Reset() {
	*x = VoterBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoterBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoterBucketsRequest) ProtoMessage() {}

func (x *VoterBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoterBucketsRequest.ProtoReflect.Descriptor instead.
func (*VoterBucketsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{3}
}

func (x *VoterBucketsRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

type VoterBucketsRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId  string   `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	Groups []uint32 `protobuf:"varint,2,rep,packed,name=groups,proto3" json:"groups,omitempty"`
}

func (x *VoterBucketsRequestV2) Reset() {
	*x = VoterBucketsRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoterBucketsRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoterBucketsRequestV2) ProtoMessage() {}

func (x *VoterBucketsRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoterBucketsRequestV2.ProtoReflect.Descriptor instead.
func (*VoterBucketsRequestV2) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{4}
}

func (x *VoterBucketsRequestV2) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *VoterBucketsRequestV2) GetGroups() []uint32 {
	if x != nil {
		return x.Groups
	}
	return nil
}

type VoterBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*VoterGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *VoterBucketsResponse) Reset() {
	*x = VoterBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoterBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoterBucketsResponse) ProtoMessage() {}

func (x *VoterBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoterBucketsResponse.ProtoReflect.Descriptor instead.
func (*VoterBucketsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{5}
}

func (x *VoterBucketsResponse) GetGroups() []*VoterGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type VoterGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Votes  string `protobuf:"bytes,1,opt,name=votes,proto3" json:"votes,omitempty"`
	Voters uint64 `protobuf:"varint,2,opt,name=voters,proto3" json:"voters,omitempty"`
}

func (x *VoterGroup) Reset() {
	*x = VoterGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoterGroup) ProtoMessage() {}

func (x *VoterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoterGroup.ProtoReflect.Descriptor instead.
func (*VoterGroup) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{6}
}

func (x *VoterGroup) GetVotes() string {
	if x != nil {
		return x.Votes
	}
	return ""
}

func (x *VoterGroup) GetVoters() uint64 {
	if x != nil {
		return x.Voters
	}
	return 0
}

type ExclusiveVotersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
}

func (x *ExclusiveVotersRequest) Reset() {
	*x = ExclusiveVotersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExclusiveVotersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExclusiveVotersRequest) ProtoMessage() {}

func (x *ExclusiveVotersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExclusiveVotersRequest.ProtoReflect.Descriptor instead.
func (*ExclusiveVotersRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{7}
}

func (x *ExclusiveVotersRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

type ExclusiveVotersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exclusive uint32 `protobuf:"varint,1,opt,name=exclusive,proto3" json:"exclusive,omitempty"`
	Total     uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ExclusiveVotersResponse) Reset() {
	*x = ExclusiveVotersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExclusiveVotersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExclusiveVotersResponse) ProtoMessage() {}

func (x *ExclusiveVotersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExclusiveVotersResponse.ProtoReflect.Descriptor instead.
func (*ExclusiveVotersResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{8}
}

func (x *ExclusiveVotersResponse) GetExclusive() uint32 {
	if x != nil {
		return x.Exclusive
	}
	return 0
}

func (x *ExclusiveVotersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MonthlyNewProposalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId          string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	PeriodInMonths uint32 `protobuf:"varint,2,opt,name=period_in_months,json=periodInMonths,proto3" json:"period_in_months,omitempty"`
}

func (x *MonthlyNewProposalsRequest) Reset() {
	*x = MonthlyNewProposalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyNewProposalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyNewProposalsRequest) ProtoMessage() {}

func (x *MonthlyNewProposalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyNewProposalsRequest.ProtoReflect.Descriptor instead.
func (*MonthlyNewProposalsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{9}
}

func (x *MonthlyNewProposalsRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *MonthlyNewProposalsRequest) GetPeriodInMonths() uint32 {
	if x != nil {
		return x.PeriodInMonths
	}
	return 0
}

type ProposalsByMonth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodStarted  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=period_started,json=periodStarted,proto3" json:"period_started,omitempty"`
	ProposalsCount uint64                 `protobuf:"varint,2,opt,name=proposals_count,json=proposalsCount,proto3" json:"proposals_count,omitempty"`
	SpamCount      uint64                 `protobuf:"varint,3,opt,name=spam_count,json=spamCount,proto3" json:"spam_count,omitempty"`
}

func (x *ProposalsByMonth) Reset() {
	*x = ProposalsByMonth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalsByMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalsByMonth) ProtoMessage() {}

func (x *ProposalsByMonth) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalsByMonth.ProtoReflect.Descriptor instead.
func (*ProposalsByMonth) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{10}
}

func (x *ProposalsByMonth) GetPeriodStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStarted
	}
	return nil
}

func (x *ProposalsByMonth) GetProposalsCount() uint64 {
	if x != nil {
		return x.ProposalsCount
	}
	return 0
}

func (x *ProposalsByMonth) GetSpamCount() uint64 {
	if x != nil {
		return x.SpamCount
	}
	return 0
}

type MonthlyNewProposalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalsByMonth []*ProposalsByMonth `protobuf:"bytes,1,rep,name=proposals_by_month,json=proposalsByMonth,proto3" json:"proposals_by_month,omitempty"`
}

func (x *MonthlyNewProposalsResponse) Reset() {
	*x = MonthlyNewProposalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyNewProposalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyNewProposalsResponse) ProtoMessage() {}

func (x *MonthlyNewProposalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyNewProposalsResponse.ProtoReflect.Descriptor instead.
func (*MonthlyNewProposalsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{11}
}

func (x *MonthlyNewProposalsResponse) GetProposalsByMonth() []*ProposalsByMonth {
	if x != nil {
		return x.ProposalsByMonth
	}
	return nil
}

type SucceededProposalsCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
}

func (x *SucceededProposalsCountRequest) Reset() {
	*x = SucceededProposalsCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SucceededProposalsCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SucceededProposalsCountRequest) ProtoMessage() {}

func (x *SucceededProposalsCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SucceededProposalsCountRequest.ProtoReflect.Descriptor instead.
func (*SucceededProposalsCountRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{12}
}

func (x *SucceededProposalsCountRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

type SucceededProposalsCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeeded uint32 `protobuf:"varint,1,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Finished  uint32 `protobuf:"varint,2,opt,name=finished,proto3" json:"finished,omitempty"`
}

func (x *SucceededProposalsCountResponse) Reset() {
	*x = SucceededProposalsCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SucceededProposalsCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SucceededProposalsCountResponse) ProtoMessage() {}

func (x *SucceededProposalsCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SucceededProposalsCountResponse.ProtoReflect.Descriptor instead.
func (*SucceededProposalsCountResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{13}
}

func (x *SucceededProposalsCountResponse) GetSucceeded() uint32 {
	if x != nil {
		return x.Succeeded
	}
	return 0
}

func (x *SucceededProposalsCountResponse) GetFinished() uint32 {
	if x != nil {
		return x.Finished
	}
	return 0
}

type DaosVotersParticipateInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DaosVotersParticipateInRequest) Reset() {
	*x = DaosVotersParticipateInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaosVotersParticipateInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaosVotersParticipateInRequest) ProtoMessage() {}

func (x *DaosVotersParticipateInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaosVotersParticipateInRequest.ProtoReflect.Descriptor instead.
func (*DaosVotersParticipateInRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{14}
}

func (x *DaosVotersParticipateInRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *DaosVotersParticipateInRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DaosVotersParticipateInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoVotersParticipateIn []*DaoVotersParticipateIn `protobuf:"bytes,1,rep,name=dao_voters_participate_in,json=daoVotersParticipateIn,proto3" json:"dao_voters_participate_in,omitempty"`
}

func (x *DaosVotersParticipateInResponse) Reset() {
	*x = DaosVotersParticipateInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaosVotersParticipateInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaosVotersParticipateInResponse) ProtoMessage() {}

func (x *DaosVotersParticipateInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaosVotersParticipateInResponse.ProtoReflect.Descriptor instead.
func (*DaosVotersParticipateInResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{15}
}

func (x *DaosVotersParticipateInResponse) GetDaoVotersParticipateIn() []*DaoVotersParticipateIn {
	if x != nil {
		return x.DaoVotersParticipateIn
	}
	return nil
}

type DaoVotersParticipateIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId         string  `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	VotersCount   uint32  `protobuf:"varint,2,opt,name=voters_count,json=votersCount,proto3" json:"voters_count,omitempty"`
	PercentVoters float32 `protobuf:"fixed32,3,opt,name=percent_voters,json=percentVoters,proto3" json:"percent_voters,omitempty"`
}

func (x *DaoVotersParticipateIn) Reset() {
	*x = DaoVotersParticipateIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaoVotersParticipateIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaoVotersParticipateIn) ProtoMessage() {}

func (x *DaoVotersParticipateIn) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaoVotersParticipateIn.ProtoReflect.Descriptor instead.
func (*DaoVotersParticipateIn) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{16}
}

func (x *DaoVotersParticipateIn) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *DaoVotersParticipateIn) GetVotersCount() uint32 {
	if x != nil {
		return x.VotersCount
	}
	return 0
}

func (x *DaoVotersParticipateIn) GetPercentVoters() float32 {
	if x != nil {
		return x.PercentVoters
	}
	return 0
}

type TopVotersByVpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId          string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	Offset         uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit          uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	PeriodInMonths uint32 `protobuf:"varint,4,opt,name=period_in_months,json=periodInMonths,proto3" json:"period_in_months,omitempty"`
}

func (x *TopVotersByVpRequest) Reset() {
	*x = TopVotersByVpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopVotersByVpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopVotersByVpRequest) ProtoMessage() {}

func (x *TopVotersByVpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopVotersByVpRequest.ProtoReflect.Descriptor instead.
func (*TopVotersByVpRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{17}
}

func (x *TopVotersByVpRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *TopVotersByVpRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TopVotersByVpRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TopVotersByVpRequest) GetPeriodInMonths() uint32 {
	if x != nil {
		return x.PeriodInMonths
	}
	return 0
}

type TopVotersByVpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voters      uint64         `protobuf:"varint,1,opt,name=voters,proto3" json:"voters,omitempty"`
	TotalAvgVp  float32        `protobuf:"fixed32,2,opt,name=total_avg_vp,json=totalAvgVp,proto3" json:"total_avg_vp,omitempty"`
	VoterWithVp []*VoterWithVp `protobuf:"bytes,3,rep,name=voter_with_vp,json=voterWithVp,proto3" json:"voter_with_vp,omitempty"`
}

func (x *TopVotersByVpResponse) Reset() {
	*x = TopVotersByVpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopVotersByVpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopVotersByVpResponse) ProtoMessage() {}

func (x *TopVotersByVpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopVotersByVpResponse.ProtoReflect.Descriptor instead.
func (*TopVotersByVpResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{18}
}

func (x *TopVotersByVpResponse) GetVoters() uint64 {
	if x != nil {
		return x.Voters
	}
	return 0
}

func (x *TopVotersByVpResponse) GetTotalAvgVp() float32 {
	if x != nil {
		return x.TotalAvgVp
	}
	return 0
}

func (x *TopVotersByVpResponse) GetVoterWithVp() []*VoterWithVp {
	if x != nil {
		return x.VoterWithVp
	}
	return nil
}

type VoterWithVp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voter      string  `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	VpAvg      float32 `protobuf:"fixed32,2,opt,name=vp_avg,json=vpAvg,proto3" json:"vp_avg,omitempty"`
	VotesCount uint32  `protobuf:"varint,3,opt,name=votes_count,json=votesCount,proto3" json:"votes_count,omitempty"`
}

func (x *VoterWithVp) Reset() {
	*x = VoterWithVp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoterWithVp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoterWithVp) ProtoMessage() {}

func (x *VoterWithVp) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoterWithVp.ProtoReflect.Descriptor instead.
func (*VoterWithVp) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{19}
}

func (x *VoterWithVp) GetVoter() string {
	if x != nil {
		return x.Voter
	}
	return ""
}

func (x *VoterWithVp) GetVpAvg() float32 {
	if x != nil {
		return x.VpAvg
	}
	return 0
}

func (x *VoterWithVp) GetVotesCount() uint32 {
	if x != nil {
		return x.VotesCount
	}
	return 0
}

type TotalsForLastPeriodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodInDays uint32 `protobuf:"varint,1,opt,name=period_in_days,json=periodInDays,proto3" json:"period_in_days,omitempty"`
}

func (x *TotalsForLastPeriodsRequest) Reset() {
	*x = TotalsForLastPeriodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalsForLastPeriodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalsForLastPeriodsRequest) ProtoMessage() {}

func (x *TotalsForLastPeriodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalsForLastPeriodsRequest.ProtoReflect.Descriptor instead.
func (*TotalsForLastPeriodsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{20}
}

func (x *TotalsForLastPeriodsRequest) GetPeriodInDays() uint32 {
	if x != nil {
		return x.PeriodInDays
	}
	return 0
}

type TotalsForLastPeriodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Daos      *Totals `protobuf:"bytes,1,opt,name=daos,proto3" json:"daos,omitempty"`
	Proposals *Totals `protobuf:"bytes,2,opt,name=proposals,proto3" json:"proposals,omitempty"`
	Voters    *Totals `protobuf:"bytes,3,opt,name=voters,proto3" json:"voters,omitempty"`
	Votes     *Totals `protobuf:"bytes,4,opt,name=votes,proto3" json:"votes,omitempty"`
}

func (x *TotalsForLastPeriodsResponse) Reset() {
	*x = TotalsForLastPeriodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalsForLastPeriodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalsForLastPeriodsResponse) ProtoMessage() {}

func (x *TotalsForLastPeriodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalsForLastPeriodsResponse.ProtoReflect.Descriptor instead.
func (*TotalsForLastPeriodsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{21}
}

func (x *TotalsForLastPeriodsResponse) GetDaos() *Totals {
	if x != nil {
		return x.Daos
	}
	return nil
}

func (x *TotalsForLastPeriodsResponse) GetProposals() *Totals {
	if x != nil {
		return x.Proposals
	}
	return nil
}

func (x *TotalsForLastPeriodsResponse) GetVoters() *Totals {
	if x != nil {
		return x.Voters
	}
	return nil
}

func (x *TotalsForLastPeriodsResponse) GetVotes() *Totals {
	if x != nil {
		return x.Votes
	}
	return nil
}

type Totals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPeriodTotal  uint64 `protobuf:"varint,1,opt,name=current_period_total,json=currentPeriodTotal,proto3" json:"current_period_total,omitempty"`
	PreviousPeriodTotal uint64 `protobuf:"varint,2,opt,name=previous_period_total,json=previousPeriodTotal,proto3" json:"previous_period_total,omitempty"`
}

func (x *Totals) Reset() {
	*x = Totals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Totals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Totals) ProtoMessage() {}

func (x *Totals) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Totals.ProtoReflect.Descriptor instead.
func (*Totals) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{22}
}

func (x *Totals) GetCurrentPeriodTotal() uint64 {
	if x != nil {
		return x.CurrentPeriodTotal
	}
	return 0
}

func (x *Totals) GetPreviousPeriodTotal() uint64 {
	if x != nil {
		return x.PreviousPeriodTotal
	}
	return 0
}

type MonthlyActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ObjectType `protobuf:"varint,1,opt,name=type,proto3,enum=internalapi.ObjectType" json:"type,omitempty"`
}

func (x *MonthlyActiveRequest) Reset() {
	*x = MonthlyActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyActiveRequest) ProtoMessage() {}

func (x *MonthlyActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyActiveRequest.ProtoReflect.Descriptor instead.
func (*MonthlyActiveRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{23}
}

func (x *MonthlyActiveRequest) GetType() ObjectType {
	if x != nil {
		return x.Type
	}
	return ObjectType_OBJECT_TYPE_UNSPECIFIED
}

type MonthlyActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalsByMonth []*TotalsByMonth `protobuf:"bytes,1,rep,name=totals_by_month,json=totalsByMonth,proto3" json:"totals_by_month,omitempty"`
}

func (x *MonthlyActiveResponse) Reset() {
	*x = MonthlyActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyActiveResponse) ProtoMessage() {}

func (x *MonthlyActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyActiveResponse.ProtoReflect.Descriptor instead.
func (*MonthlyActiveResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{24}
}

func (x *MonthlyActiveResponse) GetTotalsByMonth() []*TotalsByMonth {
	if x != nil {
		return x.TotalsByMonth
	}
	return nil
}

type GetAvgVpListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaoId          string `protobuf:"bytes,1,opt,name=dao_id,json=daoId,proto3" json:"dao_id,omitempty"`
	PeriodInMonths uint32 `protobuf:"varint,2,opt,name=period_in_months,json=periodInMonths,proto3" json:"period_in_months,omitempty"`
}

func (x *GetAvgVpListRequest) Reset() {
	*x = GetAvgVpListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvgVpListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvgVpListRequest) ProtoMessage() {}

func (x *GetAvgVpListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvgVpListRequest.ProtoReflect.Descriptor instead.
func (*GetAvgVpListRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{25}
}

func (x *GetAvgVpListRequest) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *GetAvgVpListRequest) GetPeriodInMonths() uint32 {
	if x != nil {
		return x.PeriodInMonths
	}
	return 0
}

type GetAvgVpListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpValue      float32 `protobuf:"fixed32,1,opt,name=vp_value,json=vpValue,proto3" json:"vp_value,omitempty"`
	VotersCutted uint32  `protobuf:"varint,2,opt,name=voters_cutted,json=votersCutted,proto3" json:"voters_cutted,omitempty"`
	VotersTotal  uint32  `protobuf:"varint,3,opt,name=voters_total,json=votersTotal,proto3" json:"voters_total,omitempty"`
	Bins         []*Bin  `protobuf:"bytes,4,rep,name=bins,proto3" json:"bins,omitempty"`
}

func (x *GetAvgVpListResponse) Reset() {
	*x = GetAvgVpListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvgVpListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvgVpListResponse) ProtoMessage() {}

func (x *GetAvgVpListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvgVpListResponse.ProtoReflect.Descriptor instead.
func (*GetAvgVpListResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{26}
}

func (x *GetAvgVpListResponse) GetVpValue() float32 {
	if x != nil {
		return x.VpValue
	}
	return 0
}

func (x *GetAvgVpListResponse) GetVotersCutted() uint32 {
	if x != nil {
		return x.VotersCutted
	}
	return 0
}

func (x *GetAvgVpListResponse) GetVotersTotal() uint32 {
	if x != nil {
		return x.VotersTotal
	}
	return 0
}

func (x *GetAvgVpListResponse) GetBins() []*Bin {
	if x != nil {
		return x.Bins
	}
	return nil
}

type TotalsByMonth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodStarted   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=period_started,json=periodStarted,proto3" json:"period_started,omitempty"`
	Total           uint64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	NewObjectsTotal uint64                 `protobuf:"varint,3,opt,name=new_objects_total,json=newObjectsTotal,proto3" json:"new_objects_total,omitempty"`
}

func (x *TotalsByMonth) Reset() {
	*x = TotalsByMonth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalsByMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalsByMonth) ProtoMessage() {}

func (x *TotalsByMonth) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalsByMonth.ProtoReflect.Descriptor instead.
func (*TotalsByMonth) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{27}
}

func (x *TotalsByMonth) GetPeriodStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStarted
	}
	return nil
}

func (x *TotalsByMonth) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TotalsByMonth) GetNewObjectsTotal() uint64 {
	if x != nil {
		return x.NewObjectsTotal
	}
	return 0
}

type Bin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpperBound float32 `protobuf:"fixed32,1,opt,name=upper_bound,json=upperBound,proto3" json:"upper_bound,omitempty"`
	Count      uint32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Bin) Reset() {
	*x = Bin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bin) ProtoMessage() {}

func (x *Bin) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bin.ProtoReflect.Descriptor instead.
func (*Bin) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{28}
}

func (x *Bin) GetUpperBound() float32 {
	if x != nil {
		return x.UpperBound
	}
	return 0
}

func (x *Bin) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_analytics_proto protoreflect.FileDescriptor

var file_analytics_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5c, 0x0a, 0x19, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x6f, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x69, 0x6e,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x22, 0xa4, 0x01,
	0x0a, 0x12, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65,
	0x77, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x1a, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x12, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x2c, 0x0a, 0x13, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x6f, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x15, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x47, 0x0a, 0x14, 0x56,
	0x6f, 0x74, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70,
	0x69, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x22, 0x3a, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x2f, 0x0a, 0x16, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x61,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x5d, 0x0a, 0x1a, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x22,
	0x9d, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x70, 0x61, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x6a, 0x0a, 0x1b, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x1e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x61, 0x6f, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x65, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x22, 0x4d, 0x0a, 0x1e, 0x44, 0x61, 0x6f, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x81, 0x01, 0x0a, 0x1f, 0x44, 0x61, 0x6f, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x19, 0x64, 0x61, 0x6f, 0x5f, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x52, 0x16, 0x64, 0x61,
	0x6f, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x22, 0x79, 0x0a, 0x16, 0x44, 0x61, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x6f, 0x74,
	0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x85, 0x01, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x56,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x61, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49,
	0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x56,
	0x6f, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x56, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x61, 0x76, 0x67, 0x5f, 0x76, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x67, 0x56, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x76, 0x70, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x56, 0x70, 0x52, 0x0b, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x56, 0x70, 0x22, 0x5b, 0x0a, 0x0b, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x56, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x70, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x76, 0x70, 0x41, 0x76, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x1b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73,
	0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x1c,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04,
	0x64, 0x61, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52,
	0x04, 0x64, 0x61, 0x6f, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x06, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73,
	0x22, 0x6e, 0x0a, 0x06, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x43, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x15, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x22, 0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x76, 0x67, 0x56, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x61, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x49, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x67, 0x56, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x76, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x75, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x43, 0x75, 0x74,
	0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x69, 0x6e, 0x52, 0x04, 0x62, 0x69, 0x6e, 0x73, 0x22, 0x94, 0x01, 0x0a,
	0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x41,
	0x0a, 0x0e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x3c, 0x0a, 0x03, 0x42, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2a, 0x6f, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x17, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x4f, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x52,
	0x10, 0x03, 0x32, 0xe4, 0x08, 0x0a, 0x09, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x56, 0x32, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x21, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x4e, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6f, 0x73,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x61, 0x6f, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x61, 0x6f, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x56, 0x70, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x6f, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x56, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x70, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x56,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x73, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x21, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x76, 0x67, 0x56, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x67, 0x56, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x67, 0x56, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x3b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_analytics_proto_rawDescOnce sync.Once
	file_analytics_proto_rawDescData = file_analytics_proto_rawDesc
)

func file_analytics_proto_rawDescGZIP() []byte {
	file_analytics_proto_rawDescOnce.Do(func() {
		file_analytics_proto_rawDescData = protoimpl.X.CompressGZIP(file_analytics_proto_rawDescData)
	})
	return file_analytics_proto_rawDescData
}

var file_analytics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_analytics_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_analytics_proto_goTypes = []interface{}{
	(ObjectType)(0),                         // 0: internalapi.ObjectType
	(*MonthlyActiveUsersRequest)(nil),       // 1: internalapi.MonthlyActiveUsersRequest
	(*MonthlyActiveUsers)(nil),              // 2: internalapi.MonthlyActiveUsers
	(*MonthlyActiveUsersResponse)(nil),      // 3: internalapi.MonthlyActiveUsersResponse
	(*VoterBucketsRequest)(nil),             // 4: internalapi.VoterBucketsRequest
	(*VoterBucketsRequestV2)(nil),           // 5: internalapi.VoterBucketsRequestV2
	(*VoterBucketsResponse)(nil),            // 6: internalapi.VoterBucketsResponse
	(*VoterGroup)(nil),                      // 7: internalapi.VoterGroup
	(*ExclusiveVotersRequest)(nil),          // 8: internalapi.ExclusiveVotersRequest
	(*ExclusiveVotersResponse)(nil),         // 9: internalapi.ExclusiveVotersResponse
	(*MonthlyNewProposalsRequest)(nil),      // 10: internalapi.MonthlyNewProposalsRequest
	(*ProposalsByMonth)(nil),                // 11: internalapi.ProposalsByMonth
	(*MonthlyNewProposalsResponse)(nil),     // 12: internalapi.MonthlyNewProposalsResponse
	(*SucceededProposalsCountRequest)(nil),  // 13: internalapi.SucceededProposalsCountRequest
	(*SucceededProposalsCountResponse)(nil), // 14: internalapi.SucceededProposalsCountResponse
	(*DaosVotersParticipateInRequest)(nil),  // 15: internalapi.DaosVotersParticipateInRequest
	(*DaosVotersParticipateInResponse)(nil), // 16: internalapi.DaosVotersParticipateInResponse
	(*DaoVotersParticipateIn)(nil),          // 17: internalapi.DaoVotersParticipateIn
	(*TopVotersByVpRequest)(nil),            // 18: internalapi.TopVotersByVpRequest
	(*TopVotersByVpResponse)(nil),           // 19: internalapi.TopVotersByVpResponse
	(*VoterWithVp)(nil),                     // 20: internalapi.VoterWithVp
	(*TotalsForLastPeriodsRequest)(nil),     // 21: internalapi.TotalsForLastPeriodsRequest
	(*TotalsForLastPeriodsResponse)(nil),    // 22: internalapi.TotalsForLastPeriodsResponse
	(*Totals)(nil),                          // 23: internalapi.Totals
	(*MonthlyActiveRequest)(nil),            // 24: internalapi.MonthlyActiveRequest
	(*MonthlyActiveResponse)(nil),           // 25: internalapi.MonthlyActiveResponse
	(*GetAvgVpListRequest)(nil),             // 26: internalapi.GetAvgVpListRequest
	(*GetAvgVpListResponse)(nil),            // 27: internalapi.GetAvgVpListResponse
	(*TotalsByMonth)(nil),                   // 28: internalapi.TotalsByMonth
	(*Bin)(nil),                             // 29: internalapi.Bin
	(*timestamppb.Timestamp)(nil),           // 30: google.protobuf.Timestamp
}
var file_analytics_proto_depIdxs = []int32{
	30, // 0: internalapi.MonthlyActiveUsers.period_started:type_name -> google.protobuf.Timestamp
	2,  // 1: internalapi.MonthlyActiveUsersResponse.monthly_active_users:type_name -> internalapi.MonthlyActiveUsers
	7,  // 2: internalapi.VoterBucketsResponse.groups:type_name -> internalapi.VoterGroup
	30, // 3: internalapi.ProposalsByMonth.period_started:type_name -> google.protobuf.Timestamp
	11, // 4: internalapi.MonthlyNewProposalsResponse.proposals_by_month:type_name -> internalapi.ProposalsByMonth
	17, // 5: internalapi.DaosVotersParticipateInResponse.dao_voters_participate_in:type_name -> internalapi.DaoVotersParticipateIn
	20, // 6: internalapi.TopVotersByVpResponse.voter_with_vp:type_name -> internalapi.VoterWithVp
	23, // 7: internalapi.TotalsForLastPeriodsResponse.daos:type_name -> internalapi.Totals
	23, // 8: internalapi.TotalsForLastPeriodsResponse.proposals:type_name -> internalapi.Totals
	23, // 9: internalapi.TotalsForLastPeriodsResponse.voters:type_name -> internalapi.Totals
	23, // 10: internalapi.TotalsForLastPeriodsResponse.votes:type_name -> internalapi.Totals
	0,  // 11: internalapi.MonthlyActiveRequest.type:type_name -> internalapi.ObjectType
	28, // 12: internalapi.MonthlyActiveResponse.totals_by_month:type_name -> internalapi.TotalsByMonth
	29, // 13: internalapi.GetAvgVpListResponse.bins:type_name -> internalapi.Bin
	30, // 14: internalapi.TotalsByMonth.period_started:type_name -> google.protobuf.Timestamp
	1,  // 15: internalapi.Analytics.GetMonthlyActiveUsers:input_type -> internalapi.MonthlyActiveUsersRequest
	4,  // 16: internalapi.Analytics.GetVoterBuckets:input_type -> internalapi.VoterBucketsRequest
	5,  // 17: internalapi.Analytics.GetVoterBucketsV2:input_type -> internalapi.VoterBucketsRequestV2
	8,  // 18: internalapi.Analytics.GetExclusiveVoters:input_type -> internalapi.ExclusiveVotersRequest
	10, // 19: internalapi.Analytics.GetMonthlyNewProposals:input_type -> internalapi.MonthlyNewProposalsRequest
	13, // 20: internalapi.Analytics.GetSucceededProposalsCount:input_type -> internalapi.SucceededProposalsCountRequest
	15, // 21: internalapi.Analytics.GetDaosVotersParticipateIn:input_type -> internalapi.DaosVotersParticipateInRequest
	18, // 22: internalapi.Analytics.GetTopVotersByVp:input_type -> internalapi.TopVotersByVpRequest
	21, // 23: internalapi.Analytics.GetTotalsForLastPeriods:input_type -> internalapi.TotalsForLastPeriodsRequest
	24, // 24: internalapi.Analytics.GetMonthlyActive:input_type -> internalapi.MonthlyActiveRequest
	26, // 25: internalapi.Analytics.GetAvgVpList:input_type -> internalapi.GetAvgVpListRequest
	3,  // 26: internalapi.Analytics.GetMonthlyActiveUsers:output_type -> internalapi.MonthlyActiveUsersResponse
	6,  // 27: internalapi.Analytics.GetVoterBuckets:output_type -> internalapi.VoterBucketsResponse
	6,  // 28: internalapi.Analytics.GetVoterBucketsV2:output_type -> internalapi.VoterBucketsResponse
	9,  // 29: internalapi.Analytics.GetExclusiveVoters:output_type -> internalapi.ExclusiveVotersResponse
	12, // 30: internalapi.Analytics.GetMonthlyNewProposals:output_type -> internalapi.MonthlyNewProposalsResponse
	14, // 31: internalapi.Analytics.GetSucceededProposalsCount:output_type -> internalapi.SucceededProposalsCountResponse
	16, // 32: internalapi.Analytics.GetDaosVotersParticipateIn:output_type -> internalapi.DaosVotersParticipateInResponse
	19, // 33: internalapi.Analytics.GetTopVotersByVp:output_type -> internalapi.TopVotersByVpResponse
	22, // 34: internalapi.Analytics.GetTotalsForLastPeriods:output_type -> internalapi.TotalsForLastPeriodsResponse
	25, // 35: internalapi.Analytics.GetMonthlyActive:output_type -> internalapi.MonthlyActiveResponse
	27, // 36: internalapi.Analytics.GetAvgVpList:output_type -> internalapi.GetAvgVpListResponse
	26, // [26:37] is the sub-list for method output_type
	15, // [15:26] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_analytics_proto_init() }
func file_analytics_proto_init() {
	if File_analytics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analytics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyActiveUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyActiveUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyActiveUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoterBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoterBucketsRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoterBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoterGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExclusiveVotersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExclusiveVotersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyNewProposalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalsByMonth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyNewProposalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SucceededProposalsCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SucceededProposalsCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaosVotersParticipateInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaosVotersParticipateInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaoVotersParticipateIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopVotersByVpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopVotersByVpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoterWithVp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalsForLastPeriodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalsForLastPeriodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Totals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthlyActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvgVpListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvgVpListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalsByMonth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analytics_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analytics_proto_goTypes,
		DependencyIndexes: file_analytics_proto_depIdxs,
		EnumInfos:         file_analytics_proto_enumTypes,
		MessageInfos:      file_analytics_proto_msgTypes,
	}.Build()
	File_analytics_proto = out.File
	file_analytics_proto_rawDesc = nil
	file_analytics_proto_goTypes = nil
	file_analytics_proto_depIdxs = nil
}
